* 用法
  FixExcel.py 脚本按规则转换 .txt、.xlsx、.gz 等类型的文件，并可以在指定目录下生
  成文本。第一个参数是必填参数，可以是文件名或目录名，如果是目录名，将会处理目录
  下的所有文件或子目录（递归调用）；第二个参数是输出目录，是可选项，如果没有指定
  输出目录，将会在输出在当期路径下（程序执行路径），如果指定路径但目录不存在，程
  序会自动创建目录。

  *注意* ：不要将输出目录放在输入目录下，由于会递归调用，将产生非预期结果。

  #+begin_src sh
    # 直接执行脚本
    python ./FixExcel.py < file | directory > [ output-directory ]

    # 执行 PyInstaller 打包后的可执行文件
    FixExcel.exe < file | directory > [ output-directory ]
  #+end_src

* 使用 PyInstaller 生成可执行文件

  通过 PyCharm 将 PyInstaller 加入 External Tools 生成可执行文件：
  
  1. 在 File -> Project -> Python Interpreter 中增加 PyInstaller 模块。
  2. 在 File -> Project -> Tools -> External Tools 中增加 PyInstaller 工具，其中
     参数设定如下：
     - Program :: \path\to\pyinstaller.exe
     - Arguments :: -F -n $FileNameWithoutExtension$.exe $FileNameWithoutExtension$.py
     - Working diretory :: $FileDir$
  3. 执行 Tools -> External Tools -> PyInstaller 生成可执行文件（位于
     project/dist 路径下）
     
* 在 Windows 上设置多版本 Python
由于 Python3.9 + PyInstaller 在 Win10 上生成的可执行文件在 Win7 系统运行可能找不
到依赖的 dll 文件，因此需要将 Python 降版本到 3.7 或 3.8 来打包，设置虚拟环境的
步骤如下(参考[[https://www.freecodecamp.org/news/installing-multiple-python-versions-on-windows-using-virtualenv/][这里]])：
1. 使用原有版本 python/pip 安装 virtualenv
   #+begin_src sh
     pip install virtualenv
   #+end_src
2. 安装 Python3.7 （注意不要勾选 “Add Python 3.7 to PATH”）
3. 创建虚拟环境
   #+begin_src sh
     virtualenv \path\to\python37 -p path\to\python37\python.exe \
                --no-pip --no-setuptools --no-wheel
   #+end_src

4. 进入虚拟环境并安装模块：在虚拟环境中直接通过 pip 安装模块，可能出现
   HTTP_PROXY参数无效的情况，请在通过 py 安装模块：
   #+begin_src sh
     cd \path\to\python37\Scripts
     .\activate.bat
     (Python37)> py -m pip install xlwings --proxy="http://ip:port"
     (Python37)> deactivate
   #+end_src

5. 在 PyCharm 中导入 Python3.7 解释器：注意选择 "Existing environment" 并从
   "Virtualenv Environment" 中选择对应路径。

